# -*- coding: utf-8 -*-
"""netflix analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dkHAvA_Mq0re0oBvRXJLQiKgnwXE3LZs

### Importing Libraries
"""

import numpy as np # linear algebra
import pandas as pd # data processing
import matplotlib.pyplot as plt
import seaborn as sns

"""### Loading the Dataset"""

df = pd.read_csv('/content/netflix_titles.csv')

df.head(20)

"""Shape of the dataset"""

df.shape

"""Print the name of columns"""

df.columns

"""Check for NULL Values"""

print(df.isnull().sum())

"""Check unique values"""

print(df.nunique())

"""Check for Duplicate values"""

df.duplicated().sum()

"""Make a copy of the dataset"""

df = df.copy()
df.shape

"""Clearing NUll Values"""

df=df.dropna()
df.shape

"""Print new head lines"""

df.head(15)

"""Convert Date Time format

"""

df['date_added'] = pd.to_datetime(df['date_added'], format='%B %d, %Y', errors='coerce')

df['day_added'] = df['date_added'].dt.day
df['month_added'] = df['date_added'].dt.month
df['year_added'] = df['date_added'].dt.year
df['formatted_date'] = df['date_added'].dt.strftime('%d/%m/%Y')

print(df[['date_added', 'formatted_date', 'day_added', 'month_added', 'year_added']])

"""see the changes in date"""

df.head(10)

"""Data Visualization"""

sns.countplot(df['type'])
fig = plt.gcf()
fig.set_size_inches(10,10)
plt.title('Type')

"""Rating of shows and movies"""

sns.countplot(df['rating'])
sns.countplot(df['rating']).set_xticklabels(sns.countplot(netflix['rating']).get_xticklabels(), rotation=90, ha="right")
fig = plt.gcf()
fig.set_size_inches(10,13)
plt.title('Rating')

"""Relation between Type and Rating"""

plt.figure(figsize=(10,8))
sns.countplot(x='rating',hue='type',data=netflix)
plt.title('Relation between Type and Rating')
plt.show()

netflix['rating'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True,figsize=(10,8))
plt.show()

from wordcloud import WordCloud

plt.subplots(figsize=(25,15))
wordcloud = WordCloud(
                          background_color='white',
                          width=1920,
                          height=1080
                         ).generate(" ".join(df.country))
plt.imshow(wordcloud)
plt.axis('off')
plt.savefig('country.png')
plt.show()
